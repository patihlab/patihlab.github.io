{"version":3,"sources":["app/shared/loading/infinity-loading-bar/infinity-loading-bar.jsx","app/shared/loading/infinity-loading-circular/infinity-loading-circular.jsx","app/shared/fallback/fallback.jsx","app/router.js","app/App.js","reportWebVitals.js","index.js"],"names":["InfinityLoadingBar","className","InfinityLoadingCircular","Fallback","Router","ComingSoon","lazy","then","default","fallback","exact","path","render","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8MAUeA,G,MARY,WACzB,OACE,qBAAKC,UAAU,eAAf,SACE,qBAAKA,UAAU,kBCCNC,G,MAJiB,WAC9B,OAAO,qBAAKD,UAAU,oB,sMCMTE,EAPE,WACf,OACE,qBAAKF,UAAU,mEAAf,SACE,cAAC,IAAD,OCkBSG,EAnBA,WACb,IAAMC,EAAaC,gBAAK,kBACtB,6BAAgCC,MAAK,kBAAqB,CACxDC,QADmC,EAAGH,kBAK1C,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,WAAD,CAAUI,SAAU,cAAC,EAAD,IAApB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAACP,EAAD,OACpC,cAAC,IAAD,CAAOM,KAAK,IAAIC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAG,iB,MCJtCC,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCKSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BX,M","file":"static/js/main.4105e1bc.chunk.js","sourcesContent":["import \"./infinity-loading-bar.scss\";\n\nconst InfinityLoadingBar = () => {\n  return (\n    <div className=\"loaderBorder\">\n      <div className=\"loaderBar\"></div>\n    </div>\n  );\n};\n\nexport default InfinityLoadingBar;\n","import \"./infinity-loading-circular.scss\";\n\nconst InfinityLoadingCircular = () => {\n  return <div className=\"loaderCircle\" />;\n};\n\nexport default InfinityLoadingCircular;\n","import { InfinityLoadingCircular } from \"app/shared/loading\";\n\nconst Fallback = () => {\n  return (\n    <div className=\"container d-flex justify-content-center align-items-center h-100\">\n      <InfinityLoadingCircular />\n    </div>\n  );\n};\nexport default Fallback;\n","import { lazy, Suspense } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { Fallback } from \"app/shared/fallback\";\n\nconst Router = () => {\n  const ComingSoon = lazy(() =>\n    import(\"app/pages/coming-soon\").then(({ ComingSoon }) => ({\n      default: ComingSoon,\n    }))\n  );\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Suspense fallback={<Fallback />}>\n          <Route exact path=\"/\" render={() => <ComingSoon />} />\n          <Route path=\"*\" render={() => <Redirect to=\"/\" />} />\n        </Suspense>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import Router from \"./router\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}